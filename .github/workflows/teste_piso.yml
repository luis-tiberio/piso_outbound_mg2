name: Teste Piso 1

on:
  workflow_dispatch:

jobs:
  run-script:
    # Usando a distro estável LTS
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout do código
        uses: actions/checkout@v3

      - name: Instalar Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      # ==========================================================
      # NOVO STEP PARA CORRIGIR O DNS (Temporary failure resolving)
      # ==========================================================
      - name: Corrigir DNS do Runner
        run: |
          echo "nameserver 8.8.8.8" | sudo tee /etc/resolv.conf > /dev/null
          echo "DNS fixado. Conteúdo de /etc/resolv.conf:"
          cat /etc/resolv.conf

      - name: Restaurar hxh.json a partir do segredo
        run: |
          echo "$GCP_JSON_BASE64" | base64 -d > hxh.json
        shell: bash
        env:
          GCP_JSON_BASE64: ${{ secrets.GCP_JSON_BASE64 }}

      # ==========================================================
      # Voltando para a "Solução 1", que é a correta,
      # agora com o DNS corrigido.
      # ==========================================================
      - name: Instalar dependências e Navegador (com novo Host + Retry)
        env:
          # Força o download do CDN do Google
          PLAYWRIGHT_DOWNLOAD_HOST: https://storage.googleapis.com
          
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
          # Lógica de Retry para garantir o download
          max_attempts=5
          attempt=1
          until playwright install --with-deps chromium
          do
            echo "Falha no download (Tentativa $attempt/$max_attempts). Tentando novamente em 15 segundos..."
            sleep 15
            ((attempt++))
            if [ $attempt -eq $max_attempts ]; then
              echo "Falha ao instalar o navegador após $max_attempts tentativas."
              exit 1
            fi
          done

      - name: Executar o script
        run: xvfb-run python main-mg2.py
        env:
          OPS_ID: ${{ secrets.OPS_ID }}
          OPS_SENHA: ${{ secrets.OPS_SENHA }}
